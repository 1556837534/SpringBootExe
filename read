----------------SpringBoot中注解-------------------------------------
  @SpringBootApplication 来标注一个SpringBoot 主程序  说明这是一个SpringBoot 应用 该注解标注在某一类上，说明该类是SpringBoot的主配置类
                           SpringBoot 就会运行该类的main方法来启动SpringBoot 应用
                           	@Configuration:配置类上来标注这个注解；
                           			配置类 <----->  配置文件；配置类也是容器中的一个组件；@Component
                            @EnableAutoConfiguration：开启自动配置功能；
                           		以前我们需要配置的东西，Spring Boot帮我们自动配置；@EnableAutoConfiguration告诉SpringBoot开启自动配置功能；这样自动配置才能生效；
                                    @AutoConfigurationPackage：自动配置包

                                    @Import(AutoConfigurationPackages.Registrar.class)：

                                    Spring的底层注解@Import，给容器中导入一个组件；导入的组件由AutoConfigurationPackages.Registrar.class；

                                    ==将主配置类（@SpringBootApplication标注的类）的所在包及下面所有子包里面的所有组件扫描到Spring容器；==


==Spring Boot在启动的时候从类路径下的META-INF/spring.factories中获取EnableAutoConfiguration指定的值，将这些值作为自动配置类导入到容器中，
自动配置类就生效，帮我们进行自动配置工作；==以前我们需要自己配置的东西，自动配置类都帮我们；
J2EE的整体整合解决方案和自动配置都在spring-boot-autoconfigure-1.5.9.RELEASE.jar；


---------------------------------------------------yaml 配置文件的语法格式--------------------------------------------------------
1、基本语法

k:(空格)v：表示一对键值对（空格必须有）； key: value  value与冒号之间需要有个空格

以空格的缩进来控制层级关系；只要是左对齐的一列数据，都是同一个层级的

    server:
        port: 8081
        path: /hello

属性和值也是大小写敏感；


2、值的写法

字面量：普通的值（数字，字符串，布尔）

	k: v：字面直接来写；

		字符串默认不用加上单引号或者双引号；

		""：双引号；不会转义字符串里面的特殊字符；特殊字符会作为本身想表示的意思

				name:   "zhangsan \n lisi"：输出；zhangsan 换行  lisi

		''：单引号；会转义特殊字符，特殊字符最终只是一个普通的字符串数据

				name:   ‘zhangsan \n lisi’：输出；zhangsan \n  lisi



对象、Map（属性和值）（键值对）：

	k: v：在下一行来写对象的属性和值的关系；注意缩进

		对象还是k: v的方式

    friends:
    		lastName: zhangsan
    		age: 20

行内写法：

    friends: {lastName: zhangsan,age: 18}



数组（List、Set）：

用- 值表示数组中的一个元素

    pets:
     - cat
     - dog
     - pig

行内写法

    pets: [cat,dog,pig]





